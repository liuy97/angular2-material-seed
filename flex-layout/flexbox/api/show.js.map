{"version":3,"sources":["flexbox/api/show.ts"],"names":[],"mappings":"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","file":"show.js","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n  Self,\n  Optional,\n  Inject,\n  forwardRef\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {HideDirective} from \"./hide\";\nimport {LayoutDirective} from './layout';\n\n\n\nconst FALSY = ['false', false, 0];\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({selector: `\n  [fx-show],\n  [fx-show.xs]\n  [fx-show.gt-xs],\n  [fx-show.sm],\n  [fx-show.gt-sm]\n  [fx-show.md],\n  [fx-show.gt-md]\n  [fx-show.lg],\n  [fx-show.gt-lg],\n  [fx-show.xl]\n`})\nexport class ShowDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Original dom Elements CSS display style\n   */\n  private _display = 'flex';\n\n  /**\n    * Subscription to the parent flex container's layout changes.\n    * Stored so we can unsubscribe when this directive is destroyed.\n    */\n  private _layoutWatcher : Subscription;\n\n  @Input('fx-show')       set show(val)     { this._cacheInput(\"show\", val); }\n  @Input('fx-show.xs')    set showXs(val)   { this._cacheInput('showXs', val); }\n  @Input('fx-show.gt-xs') set showGtXs(val) { this._cacheInput('showGtXs', val); };\n  @Input('fx-show.sm')    set showSm(val)   { this._cacheInput('showSm', val); };\n  @Input('fx-show.gt-sm') set showGtSm(val) { this._cacheInput('showGtSm', val); };\n  @Input('fx-show.md')    set showMd(val)   { this._cacheInput('showMd', val); };\n  @Input('fx-show.gt-md') set showGtMd(val) { this._cacheInput('showGtMd', val); };\n  @Input('fx-show.lg')    set showLg(val)   { this._cacheInput('showLg', val); };\n  @Input('fx-show.gt-lg') set showGtLg(val) { this._cacheInput('showGtLg', val); };\n  @Input('fx-show.xl')    set showXl(val)   { this._cacheInput('showXl', val); };\n  /**\n   *\n   */\n  constructor(\n      monitor : MediaMonitor,\n      @Optional() @Self() private _layout: LayoutDirective,\n      @Inject(forwardRef(() => HideDirective)) @Optional() @Self() private _hideDirective,\n      protected elRef: ElementRef,\n      protected renderer: Renderer)\n  {\n    super(monitor, elRef, renderer);\n\n    if (_layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = _layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  /**\n    * Does the current element also use the fx-show API ?\n    */\n   protected get usesHideAPI() {\n     return !!this._hideDirective;\n   }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fx-show')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['show'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('show', true, (changes: MediaChange) =>{\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n     super.ngOnDestroy();\n     if (this._layoutWatcher) {\n       this._layoutWatcher.unsubscribe();\n     }\n   }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  private _updateWithValue(value?: string|number|boolean) {\n    value = value || this._queryInput(\"show\") || true;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    if ( shouldShow || !this.usesHideAPI ) {\n      this._applyStyleToElement(this._buildCSS(shouldShow));\n    }\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  private _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1)\n  }\n}\n"]}